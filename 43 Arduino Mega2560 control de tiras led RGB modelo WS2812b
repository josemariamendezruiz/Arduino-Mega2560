/*
    ARDUINO MANEJO DE TIRAS LED CON WS2812
    CODIGO ORIGINAL DE FASTLED
    MODIFICADO POR : JOSE MARIA MENDEZ RUIZ
    DICIEMBRE 2021
   
    CODIGO LIBRE PARA UTILIZAR COMO QUIERAS
*/


#include <FastLED.h>
#include <Wire.h>

// DECLARAMOS LAS VARIABLES Y CONSTANTES QUE VAMOS A UTILIZAR
#define LED_PIN     6         // PIN DE DATOS PARA LA TIRA LED
#define NUM_LEDS    30        // CANTIDAD DE LEDS QUE TIENE NUESTRA TIRA DE LEDS
#define BRIGHTNESS  150       // BRILLO MAXIMO QUE VAMOS A UTILIZAR
#define LED_TYPE    WS2812    // TIPO/MODELO DE LA TIRA QUE UTILIZAMOS
#define COLOR_ORDER GRB       // ORDEN QUE VAMOS A UTILIZAR
int velocidad = 1;            // VELOCIDAD DE CAMBIO 

CRGB leds[NUM_LEDS];
CRGBPalette16 currentPalette;
TBlendType    currentBlending;

void setup() {
    delay( 5000 ); 
    FastLED.addLeds<LED_TYPE, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection( TypicalLEDStrip );
    FastLED.setBrightness( BRIGHTNESS );   
    currentPalette = RainbowColors_p;
    currentBlending = LINEARBLEND;
}


void loop()
{
    ChangePalettePeriodically();
    
    static uint8_t startIndex = 0;
    startIndex = startIndex + 1;
    
    FillLEDsFromPaletteColors( startIndex);
    
    FastLED.show();
    FastLED.delay(velocidad/100);
    velocidad +=1;
    if (velocidad > 2000) {velocidad = 1;}
}

void FillLEDsFromPaletteColors( uint8_t colorIndex)
{
    uint8_t brightness = 255;
    
    for( int i = 0; i < NUM_LEDS; ++i) {
        leds[i] = ColorFromPalette( currentPalette, colorIndex, brightness, currentBlending);
        colorIndex += 3;
    }
}

void ChangePalettePeriodically()
{
    uint8_t secondHand = (millis() / 100) % 50;
    static uint8_t lastSecond = 50;
    
    if( lastSecond != secondHand) {
        lastSecond = secondHand;
        if( secondHand ==  0)  { currentPalette = RainbowColors_p;         currentBlending = LINEARBLEND; }
        if( secondHand ==  5)  { currentPalette = RainbowStripeColors_p;   currentBlending = NOBLEND;  }
        if( secondHand == 10)  { currentPalette = OceanColors_p;           currentBlending = LINEARBLEND; }
        if( secondHand == 15)  { currentPalette = ForestColors_p;          currentBlending = LINEARBLEND; }
        if( secondHand == 20)  { SetupTotallyRandomPalette();              currentBlending = LINEARBLEND; }
        if( secondHand == 35)  { currentPalette = CloudColors_p;           currentBlending = NOBLEND; }
        if( secondHand == 40)  { currentPalette = LavaColors_p;            currentBlending = LINEARBLEND; }
        if( secondHand == 45)  { currentPalette = PartyColors_p;           currentBlending = LINEARBLEND; }
    }
}

// Esta funciÃ³n crea una paleta de colores completamente aleatorios
void SetupTotallyRandomPalette()
{
    for( int i = 0; i < 16; ++i) {
        currentPalette[i] = CHSV( random8(), random8(), random8());
    }
}
